1.MadLibs Generator, The input could be anything, an adjective, a noun, a pronoun, etc.
Once all the inputs are entered, the application will take the data and arrange the inputs into a story template form.

#user input
name = input("What is your name? :")
time1 = input("Give me a time:")
time2 = input("Give me another time:")
pronoun = input("Give me a pronoun:")
noun1 = input("Give me a noun:")
noun2 = input("Give me a noun:")
verb = input("Give me a (Past Tense) verb:")

#actual sentences
madlib = f"Hi! My name is {name}.I woke up at {time1} to go to school, but schools starts at {time2}.\
    After walking my {pronoun} I decided to go get ready! I changed into my favourite outfit- a dressy pant\
    and a {noun1}. Then it was time for me to eat my go to breakfast which is a {noun2}. I then {verb} to school."

print(madlib)

2.Number Guessing , Make a program in which the computer randomly chooses a number between 1 to 10, 1 to 100,
or any range. Then give users a hint to guess the number. Every time the user guesses wrong, he gets another clue, 
and his score gets reduced. The clue can be multiples, divisible, greater or smaller, or a combination of all.

import random

comp = random.randint(0,10)

player = int(input("Guess number between 0 - 10: "))
while player != comp:
    if player < comp:
        print("Higher")
        player = int(input("Guess number between 0-10: "))
    
    elif player > comp:
        print("Lower")
        player = int(input("Guess number between 0-10"))

print("You got it")

3. Contact Book, This is a command-line project where you will design a contact book application that users can use to save and find contact details.
 The application should also allow users to update contact information, delete contacts, and list saved contacts. 
contact = {}

def display_contact():
    print("Name \t\t Contact Number")
    for key in contact:
        print("{}\t\t{}".format(key,contact.get(key)))


while True:
    choice = int(input("1.Add new contact \n 2.Search contact \n 3.Display contact \n 4.Edit contact \n 5.Delete contact\n 6.Exit \n Enter your choice"))
    if choice == 1:
        name = input("Enter the contact name")
        phone = input("Enter the mobile number")
        contact[name] = phone
    elif choice == 2:
        search_name = input("Enter the contact name")
        if search_name in contact:
            print(search_name,"'s contact number is",contact[search_name])
        else:
            print("Name is not found in contact book")
    elif choice == 3:
        if not contact:
            print("empty contact book")
        else:
            display_contact
    elif choice == 4:
        edit_contact = input("Enter the contact to be edited")
        if edit_contact in contact:
            phone = input("Enter mobile number")
            contact[edit_contact]=phone
            print("contact updated")
            display_contact()
        else:
            print("Name is not found in contact book")
    elif choice == 5:
        del_contact = input("Enter the contact to be deleted")
        if del_contact in contact:
            confirm = input("Do you want to delete this contact y/n?")
            if confirm == 'y' or confirm == 'Y':
                contact.pop(del_contact)
            display_contact()
        else:
            print("Name is not found in contact book")
    else:
        break

4.Email Slicer 

email = input("Enter the email: ")
username = ""
domain = ""

split_data =email.split("@")
n = len(split_data)
username = split_data[0]
domain = split_data[1]

5.Binary Search Algorithm
import random

lst = list(range(0,100,2))
print(lst)
search_ele = int(input("Enter the number to be searched: "))

if lst:  # Check if the list is not empty
    low = 0
    high = len(lst) - 1

    while low <= high:
        mid = (low + high) // 2
        if search_ele == lst[mid]:
            print("Element found at index", mid)
            break
        elif search_ele < lst[mid]:
            high = mid - 1
        else:
            low = mid + 1
    else:
        print("Element not found in the list")
else:
    print("List is empty")

print("username is: ",username, " and the domain is: ",domain)

#14.Word Game
lst = ['car','benz car','maruthi suzuki','pulsar']
i = 1 

#Defining function to Check User Inputs
def check_user_input(n):      
    if not n.isalpha():
        if n.isdigit():
           print("Enter only alphabets")

while i<=4:
   choice = input("Guess the alphabet: ")
   if check_user_input(choice):
     break
   else:
    for word in lst: 
        if choice in word:
            print(f"The alphabet '{choice}' is present at the index position",word.index(choice))

    if choice in word:
        i=i+1
    else:
        i = i + 1

word_ = input("Guess the word: ")
if word_ in lst:
   print("Congratulations, you have guessed the Word")
else:
   print("wrong word, Try again")

#16.Leap it!
n = int(input("Enter the year: "))

if (n%4 == 0 and (n%100 != 0 or n%400 ==0)):
    print("Leap Year")
else:
    print("Not a Leap Year")



