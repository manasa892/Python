'''

Given an unsorted integer array, find a pair with the given sum in it.

• Each input can have multiple solutions. The output should match with either one of them.

Input : nums[] = [8, 7, 2, 5, 3, 1], target = 10
Output: (8, 2) or (7, 3)

• The solution can return pair in any order. If no pair with the given sum exists, the solution should return an empty tuple.

Input : nums[] = [5, 2, 6, 8, 1, 9], target = 12
Output: ()

'''

#Naive method to find a pair in a list with the given sum
def findpair(nums, target):
    new_tup = []
    new_arr = ()
    #consider each element except the last
    for i in range(len(nums) - 1):

        #start from the i'th element until the last element
        for j in range(i+1,len(nums)):

            #if the desired sum is found, print it 
            if nums[i] + nums[j] == target:
                new_arr = (nums[i],nums[j])
                new_tup.append(new_arr)
            
    
    
    if (new_tup == []):
        print("Pair not found")
    else:
        print(new_tup,"is the pair of elements found")


if __name__ == '__main__':
    nums = [2,3,5,7,8]
    target = 10

    findpair(nums,target)
